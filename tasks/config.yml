---
###############################################################################
# Configure Services
###############################################################################
# Use UID/GID as filesystems may be remote. Permissions are determined from Mox
# install - Mox will set correct permissions on startup.
#
# Decision: Use service user for SUID/SGID perms - SUID/SGID bits cannot be set
#     by a standard user for 'root' - this will result in errors during role
#     application. Mox will correct permissions on first run. This will lead
#     differential in testing between what is set in the role with user data
#     enabled, and testing resultant permissions.
#
# Mox service starts as root and drops privileges once network sockets are
# opened.
#
# Reference:
# * https://www.xmox.nl/config/

- name: 'Config | manage storage directories'
  ansible.builtin.file:
    path: '{{ item }}'
    owner: '{{ _mox_srv_user._uid }}'
    group: '{{ _mox_srv_group._gid }}'  # SUID/SGID Decision.
    mode: '2750'
    state: 'directory'
  loop:
    - '{{ _mox_srv_storage_dir._data }}'
    - '{{ _mox_srv_storage_dir._config }}'
    - '{{ _mox_srv_storage_dir._web }}'
  become: true
  become_user: '{{
      _mox_srv_user.raw
      if _mox_srv_user_data_manage_enable.raw else
      "root"
    }}'

- name: 'Config | manage web directories'
  ansible.builtin.file:
    path: '{{ item }}'
    owner: '{{ _mox_srv_user._uid }}'
    group: '{{ _mox_srv_group._gid }}'  # SUID/SGID Decision.
    mode: '0750'
    state: 'directory'
  loop:
    - '{{ _mox_srv_storage_dir._data }}'
    - '{{ _mox_srv_storage_dir._config }}'
    - '{{ _mox_srv_storage_dir._web }}'
  become: true
  become_user: '{{
      _mox_srv_user.raw
      if _mox_srv_user_data_manage_enable.raw else
      "root"
    }}'

- name: 'Config | import from controller'
  when: _mox_srv_import_config.raw | length > 0
  ansible.posix.synchronize:
    src: '{{ _mox_srv_import_config._src }}'
    dest: '{{ _mox_srv_storage_dir._config }}'
    delete: true
    recursive: true
    archive: false
    checksum: true

# yamllint disable rule:line-length
- name: 'Config | set permissions'
  when: _mox_srv_import_config.raw | length > 0
  ansible.builtin.shell: >-
    chown -R {{ _mox_srv_user._uid }}:{{ _mox_srv_group._gid }} '{{ _mox_srv_storage_dir._config }}' &&
    find '{{ _mox_srv_storage_dir._config }}' -type d -exec chmod 0750 {} \; &&
    find '{{ _mox_srv_storage_dir._config }}' -type f -exec chmod 0640 {} \;
  args:
    executable: '/bin/bash'
  changed_when: false
# yamllint enable rule:line-length

- name: 'Config | set service definitions'
  ansible.builtin.include_role:
    name: 'r_pufky.deb.systemd'
  vars:
    systemd_daemon_reload_enable: true
    systemd_services:
      - name: 'mox'
        state: 'present'
        drop_in: false
        unit:
          description: 'mox mail server'
          after:
            - 'network-online.target'
          wants:
            - 'network-online.target'
        service:
          type: 'simple'
          exec_start:
            - '{{ _mox_srv_storage_dir._bin ~ " serve" }}'
          exec_stop:
            - '{{ _mox_srv_storage_dir._bin ~ " stop" }}'
          restart_sec: '5s'
          restart: 'always'
        exec:
          u_mask: '007'
          limit_nofile:
            soft: 65535
            hard: 65535
          syslog_facility: 'mail'
          working_directory: '{{ _mox_srv_storage_dir.raw }}'
          private_devices: true
          private_tmp: true
          protect_system: 'strict'
          read_write_paths:
            - '{{ _mox_srv_storage_dir._config }}'
            - '{{ _mox_srv_storage_dir._data }}'
          protect_kernel_tunables: true
          protect_control_groups: true
          ambient_capabilities_include:
            - ''
          capability_bounding_set_include:
            - 'CAP_SETUID'
            - 'CAP_SETGID'
            - 'CAP_NET_BIND_SERVICE'
            - 'CAP_CHOWN'
            - 'CAP_FSETID'
            - 'CAP_DAC_OVERRIDE'
            - 'CAP_DAC_READ_SEARCH'
            - 'CAP_FOWNER'
            - 'CAP_KILL'
          no_new_privileges: true
          restrict_address_families_allow:
            - 'AF_INET'
            - 'AF_INET6'
            - 'AF_UNIX'
            - 'AF_NETLINK'
          protect_proc: 'invisible'
          restrict_namespaces_allow: true  # Denies. Bad systemd naming.
          restrict_realtime: true
          remove_ipc: true
          protect_hostname: true
          protect_clock: true
          protect_kernel_logs: true
          protect_kernel_modules: true
          memory_deny_write_execute: true
          lock_personality: true
          system_call_architectures:
            - 'native'
          system_call_filter_allow:
            - '@system-service'
        resource_control:
          device_policy: 'closed'
        install:
          wanted_by:
            - 'multi-user.target'
